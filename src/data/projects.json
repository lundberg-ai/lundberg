[
	{
		"id": 1,
		"slug": "consultantresume",
		"name": "Consultant Resume",
		"description": "Production React-based PDF generator for creating dynamic consultant resumes with strict formatting requirements, integrated with HR systems using Entra ID authentication",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"React",
			"React-pdf",
			"TypeScript",
			"Vite",
			".NET",
			"ASP.NET Core",
			"MSSQL",
			"LINQ",
			"Entity Framework",
			"Docker",
			"MSAL",
			"Entra ID",
			"OAuth2",
			"Azure DevOps",
			"REST API"
		],
		"company": "Tromb",
		"role": "Fullstack Developer",
		"teamSize": "1 developer, 1 designer, 1 mentor",
		"achievements": [
			"Successfully delivered PDF generator meeting all design specifications",
			"Implemented secure authentication and integration with existing HR system",
			"Deployed using CI/CD pipelines with Docker containers"
		]
	},
	{
		"id": 2,
		"slug": "algoskin",
		"name": "AlgoSkin",
		"description": "Profitable algorithmic arbitrage trading system built with Node.js and TypeScript, featuring real-time API integration, data scraping, and complex price calculations for automated trading operations",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"Node.js",
			"TypeScript",
			"ts-node",
			"HTTP API",
			"JSON",
			"Axios",
			"VMware",
			"OpenVPN",
			"Linux",
			"Ubuntu",
			"Nginx"
		],
		"company": "AlgoSkin",
		"role": "Developer",
		"teamSize": "Solo project",
		"duration": "3+ years (ongoing)",
		"challenges": [
			"Implementing real-time algorithmic price calculations for arbitrage opportunities",
			"Ensuring high system uptime with extensive error handling",
			"Managing secure operations in Linux environment with VPN tunnels",
			"Integrating multiple external APIs for data collection and trading"
		],
		"achievements": [
			"Built and deployed profitable trading system with consistent returns",
			"Achieved 99%+ uptime through robust error handling",
			"Successfully integrated multiple external trading APIs",
			"Implemented secure infrastructure with virtualization and VPN"
		],
		"myContributions": [
			"Designed and implemented the entire algorithmic trading architecture",
			"Built real-time data scraping and processing systems",
			"Developed complex price calculation algorithms for arbitrage detection",
			"Set up and maintained secure Linux-based production environment"
		]
	},
	{
		"id": 3,
		"slug": "groceryoptimizer",
		"name": "Grocery Optimizer",
		"description": "Smart grocery shopping optimization system with route planning algorithms and mapping functionality, developed as a school group project featuring API hub connecting frontend and backend services via REST and gRPC",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"React",
			"TypeScript",
			"C#",
			".NET",
			"REST API",
			"gRPC",
			"SQL",
			"Docker",
			"Entity Framework",
			"LINQ"
		],
		"company": "Lexicon & LTU",
		"role": "Backend Developer",
		"teamSize": "5 developers",
		"achievements": [
			"Built API hub connecting frontend (REST) and backend services (gRPC)",
			"Developed route optimization algorithm reducing shopping time",
			"Created full-stack solution with React frontend and database integration"
		]
	},
	{
		"id": 4,
		"slug": "lms",
		"name": "LMS",
		"description": "Comprehensive Learning Management System developed as a school group project, featuring user authentication, role-based access control, and interactive learning modules",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"React",
			"TypeScript",
			"Vite",
			"C#",
			".NET Core",
			"ASP.NET",
			"Entity Framework",
			"SQL",
			"LINQ",
			"REST API",
			"JWT"
		],
		"company": "Lexicon & LTU",
		"role": "Full Stack Developer",
		"teamSize": "4 developers",
		"achievements": [
			"Built robust backend architecture with middleware, repositories, and clean separation of concerns",
			"Implemented secure authentication system with role-based access control across frontend and backend",
			"Delivered fully functional LMS with clean UI design and seamless user experience"
		]
	},
	{
		"id": 5,
		"slug": "apples2apples",
		"name": "Apples2Apples",
		"description": "Java card game implementation showcasing multiple design patterns (Factory, Strategy, Dependency Injection) and comprehensive testing methodologies",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"Java",
			"JUnit",
			"Mockito",
			"Design Patterns",
			"Factory Pattern",
			"Strategy Pattern",
			"Dependency Injection",
			"IntelliJ"
		],
		"company": "University Project",
		"role": "Developer",
		"teamSize": "Solo project",
		"achievements": [
			"Successfully implemented Factory, Strategy, and Dependency Injection patterns",
			"Delivered clean, well-documented codebase following SOLID principles",
			"Achieved high test coverage with comprehensive unit and integration tests"
		]
	},
	{
		"id": 6,
		"slug": "languagepattern",
		"name": "Language Pattern Frequency Detection",
		"description": "Efficient language pattern detection system with statistical analysis and pattern recognition algorithms, similar to AI-based text analysis",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"C++",
			"Regex",
			"gcc",
			"Xcode",
			"Algorithms",
			"Statistical Analysis",
			"Pattern Recognition",
			"Data Structures"
		],
		"company": "University Project",
		"role": "Developer",
		"teamSize": "Solo project",
		"achievements": [
			"Successfully implemented efficient text analysis algorithms for large datasets",
			"Created meaningful statistical analysis of language patterns"
		]
	},
	{
		"id": 7,
		"slug": "topdownshootingsword",
		"name": "Top Down Shooting Sword",
		"description": "Team-developed top-down action game with dual combat mechanics featuring both ranged and melee combat systems, developed in cross-functional agile team",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"Unity",
			"C#",
			"Game Design",
			"2D Animation",
			"Pathfinding",
			"Combat Systems",
			"Git",
			"Fork",
			"Jira",
			"Agile",
			"SCRUM",
			"JetBrains Rider",
			"Miro",
			"Design Patterns"
		],
		"company": "FutureGames",
		"role": "Game Programmer",
		"teamSize": "6 team members (3 developers, 2 designers, 1 story designer)",
		"achievements": [
			"Successfully collaborated in 6-person cross-functional team using agile methodology",
			"Designed and implemented dual combat system with seamless weapon switching mechanics",
			"Developed intelligent enemy AI with pathfinding and varied behavioral patterns"
		]
	},
	{
		"id": 8,
		"slug": "abragame",
		"name": "Abracadabra Money",
		"description": "Interactive game project developed as part of FutureGames semester, featuring integrated APIs and real-time blockchain connection.",
		"heroImage": "/placeholder.svg",
		"images": [
			"/placeholder.svg",
			"/placeholder.svg",
			"/placeholder.svg"
		],
		"technologies": [
			"Unity",
			"C#",
			"Solidity",
			"Nethereum",
			"Ethereum",
			"Smart Contracts",
			"Blockchain",
			"APIs",
			"Git",
			"Fork",
			"Jira",
			"JetBrains Rider",
			"Miro",
			"Photopea",
			"Infura"
		],
		"company": "FutureGames",
		"role": "Game Programmer",
		"teamSize": "Solo project",
		"achievements": [
			"Integrated Ethereum blockchain with deployed Solidity smart contracts for real-time game interactions",
			"Built live API connections fetching cryptocurrency prices for realistic in-game token values",
			"Created polished game experience with professional design assets and blockchain functionality"
		]
	}
]